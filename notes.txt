1. Api is application programing interface.

2. Api is a software intermediary that allows two application to talk each other.
ex: wheather app 
Ex : two show app like paytm book my 

3. Rest api Representiolnal state taransfer 
REST is arcitecture, it simply provide acces to resourse and client to access and modify.

Rest is part OF API .

4. REST is used to create read update delete.

5. Postman is use to test the api.

6. Request method client => server   => http   (GET POST PUT UPDATE delete)

7. Idempotent is a property of operations or API requests that ensures repeating the operation multiple times produces the same result as executing it once.
(GET post is not idempotent);

8. GET method syntax 
 Route::get('/user', function(){
    return "Hello user";
});   

9. post method syntax
Route::post('/user{id}',function($id){
    return response()->json([
        'message' => 'User created successfully',
        'user_id' => $id
    ]);
});

10. put methos syntax 
Route::put('/user{id}',function($id){
    return response('put' . $id, 200);    
});

11. delete method syntax
Route::delete('/user{id}',function($id){
    return response('delete'. $id, 202);
});

12. Api controller having create store show edit update delete.
( php artisan make:controller api/controllername  --api)

13. Creating Api using post method to store data in the database{
    first validate the data that user filling data is correct or not the we start
    DB::beginTransaction();
            try{
                $user =  user::create($data);
                DB::commit();
            }
            catch(Exception $e){
                p($e->getMessage());
                $user = null;
            }
}

14. Showing data from database through api {
      $users = User::select('name','email')->Where('status', 1)->get();
      User::all();
}

15. Creating a delete api {
    define the Route
    DB::beginTransaction;
    user->delete();
}

16. creating PUT and PATCH api
   1. We using PUT method to update all element 
   for using put method first we find the id the we save the update and then commit.

   2. we using PATCH method to update single entity or element 
   For using PATCH method first we will check user exist or not then we upadate that through same procsess
   DB::beginTransaction();
   and then save that file  



17. For checking any error is coming in the code we use this (  'error_msg'=> $err->getMessage()  )

18. Authentication in Restful Api.
 1. static Api means the api key or access key store in the server or database that any user want to use my api they need to give the api key then they can access it's less secure any one can use if they have the key.
 
 2. Dynamic Api means if user want to use my api they need to login through they credintional then the api give them access token which is valid for some hours then the access token will expire if they want to re use the api they need to re login then they can use my api.

  